$size: 24px;
$color1: #7a7a7a;
$background1: red;

@mixin border-radius($radius) {
  border-radius: $radius;
  -ms-border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
}

@mixin border($color) {
  border: 1px solid $color;
}

h1 {
  display: inline-block;

  font: {
    family: fantasy;
    size: $size;
    weight: bold;
  }

  ;

  border: {
    left: 1px solid red;
    right: 1px solid yellow;
    top: 1px solid blue;
    bottom: 1px solid green;
  }

  ;
  color:$color1;
}

// 引入
// // _reset.scss
// html, body, ul, ol {
//     margin:  0;
//     padding: 0;
//   }
//   // base.scss
//   @import 'reset';
//   body {
//     font: 100% Helvetica, sans-serif;
//     background-color: #efefef;
//   }

// 混合
.box {
  @include border-radius(10px);
  @include border(green);
  width: 20px;
  height: 20px;
  background: $background1;
}



// 变量支持块级作用域，嵌套规则内定义的变量只能在嵌套规则内使用（局部变量），
// 不在嵌套规则内定义的变量则可在任何地方使用（全局变量）。
// 将局部变量转换为全局变量可以添加 !global 声明
// 全局变量
// $width: 50em;
// 局部变量 
.message {
  // 将局部变量转换为全局变量添加 !global 声明
  $width: 10em !global;
  width: $width;
}

.success {
  width: $width;
}

// 继承
// 这段代码不会被输出到最终生成的CSS文件，因为它没有被任何代码所继承。
%other-styles {
  display: flex;
  flex-wrap: wrap;
}

// 下面代码会正常输出到生成的CSS文件，因为它被其接下来的代码所继承。
%message-common {
  // border: 1px solid #ccc;
  @include border(#000);
  padding: 10px;
  color: red;
}

.message {
  @extend %message-common;
}

.success {
  @extend %message-common;
  border-color: green;
}

.error {
  @extend %message-common;
  border-color: red;
}

.warning {
  @extend %message-common;
  border-color: pink;
}

/*!今天是2020年上班的第一天，我今天开始接触SCSS*/
/*插值语句 (interpolation) 也可写进多行注释中输出变量值：*/
$version: "1.2.3";
/* This CSS is generated by My Snazzy Framework version #{$version}. */